{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing libraries from packages\n",
    "from flask import Flask, jsonify, request\n",
    "from db import get_rating, add_rating\n",
    "\n",
    "\n",
    "\n",
    "cus_satisfaction_app = Flask(__name__)  # creating flask class object\n",
    "\n",
    "# The accepted values for {\"Channel\":['website','app']}\n",
    "# The acceptedvalues for {\"Rating\":[1,2,3,4,5]}\n",
    "# Creating an value instance, survey_report\n",
    "\n",
    "survey_report = [{\"Channel\":'website',\n",
    "                  \"Rating\":1}]\n",
    "\n",
    "@cus_satisfaction_app.route('/survey_report')  # It acts upon the GET request and returns (Channel,Rating) in json format\n",
    "def survey():\n",
    "    return jsonify(survey_report)\n",
    "\n",
    "@cus_satisfaction_app.route('/survey_report', methods = ['POST'])  # It acts upon the POST request and submits input as (Channel,Rating) in json format\n",
    "def addValue_survey():\n",
    "    pair = request.get_json()\n",
    "    channel_check_list = [\"website\",\"app\"] # check conditions for string entry type \n",
    "    rating_check_list = [1,2,3,4,5] # check conditions for integer entry type\n",
    "    \n",
    "    \n",
    "    \n",
    "    channel_key_counter = 0  # these conditions take care that no of inputs for Channel is equal to no of inputs for Rating \n",
    "    rating_key_counter = 0\n",
    "    \n",
    "    for key,value in pair.items():       \n",
    "        \n",
    "        if (key == \"Channel\"):\n",
    "            channel_key_counter += 1\n",
    "        if (key == \"Rating\"):\n",
    "            rating_key_counter += 1\n",
    "                    \n",
    "    if rating_key_counter == channel_key_counter:\n",
    "        # the above if control structure ensures the counter conditions \n",
    "        \n",
    "        yes_values = [] # empty list to check for incorrect instances Channel and Rating\n",
    "\n",
    "    \n",
    "        for key,value in pair.items():\n",
    "            # Below condition ensures whatever be the first input in terms of Channel or Rating, if they satisfy conditions they need to append \"yes\" value\n",
    "            if ((key == \"Channel\") and (value in channel_check_list)) or \\\n",
    "            ((key == \"Rating\") and (value in rating_check_list)):\n",
    "                yes_values.append('Yes')\n",
    "\n",
    "            else:\n",
    "                yes_values.append('No')\n",
    "\n",
    "        if \"No\" not in yes_values:                   # this logic is to take care of the incorrect instances \n",
    "            survey_report.append(pair)\n",
    "            return jsonify(survey_report)\n",
    "\n",
    "        else:\n",
    "            print(\"Check conditions for key and value\")\n",
    "\n",
    "\n",
    "    \n",
    "       \n",
    "\n",
    "if __name__ == '__main__':\n",
    "\n",
    "    cus_satisfaction_app.run() # to initiate the application"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
